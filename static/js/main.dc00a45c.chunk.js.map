{"version":3,"sources":["media/phone.jpg","media/bridge.jpg","media/truck.jpg","media/produce.jpg","App.js","serviceWorker.js","index.js","media/logo.svg"],"names":["module","exports","contentful","require","App","props","burgerExpand","currentHeight","state","burgerHeight","setState","width","window","innerWidth","height","innerHeight","sizeLimit","teamData","portfolioData","client","createClient","space","accessToken","getEntries","content_type","then","response","items","console","log","className","src","logo","onClick","this","duration","map","person","fields","fullName","bio","linkedinUrl","company","companyName","websiteUrl","companyLogo","file","url","React","PureComponent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oOCUrCC,EAAaC,EAAQ,KAkIZC,E,kDA/Hb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmCRC,aAAe,WACb,IAAMC,EAAgB,EAAKC,MAAMC,aAEjC,EAAKC,SAAS,CAAED,aAAgC,IAAlBF,EAAsB,OAAS,KArC7D,EAAKC,MAAQ,CACXG,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,YACfC,UAAW,IACXP,aAAc,EACdQ,SAAU,GACVC,cAAe,IARA,E,gEAYE,IAAD,OACdC,EAASjB,EAAWkB,aAAa,CAEnCC,MAAO,eAEPC,YAAa,gDAGfH,EAAOI,WAAW,CAAEC,aAAc,eAAgBC,MAAK,SAACC,GACtD,EAAKhB,SAAS,CAAEO,SAAUS,EAASC,WAGrCR,EAAOI,WAAW,CAAEC,aAAc,qBAAsBC,MAAK,SAACC,GAC5D,EAAKhB,SAAS,CAAEQ,cAAeQ,EAASC,QACxCC,QAAQC,IAAI,EAAKrB,MAAMU,oB,+FAOzBU,QAAQC,IAAIjB,OAAOC,c,+BAUnB,OACE,yBAAKiB,UAAU,aACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cAAcC,IAAKC,OAEpC,yBAAKF,UAAU,OACb,4BAAQA,UAAU,eAAeG,QAASC,KAAK5B,cAA/C,OAMJ,kBAAC,IAAD,CACE6B,SAAU,IACVrB,OAAQoB,KAAK1B,MAAMC,aACnBqB,UAAU,0BAEV,uBAAGA,UAAU,SAAb,SACA,uBAAGA,UAAU,cAAb,QACA,uBAAGA,UAAU,SAAb,eAGJ,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cAAcC,IAAKC,OAEpC,yBAAKF,UAAU,qDACb,yBAAKA,UAAU,8BACb,oCACA,uBAAGA,UAAU,QAAb,QACA,6CAMV,6BAASA,UAAU,eACjB,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,cAAd,UACA,wBAAIA,UAAU,cAAd,WAEA,wBAAIA,UAAU,iBACZ,yBAAKA,UAAU,OAAf,eADF,aAKJ,6BAASA,UAAU,QACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACZI,KAAK1B,MAAMS,SAASmB,KAAI,SAACC,GAAD,OACvB,yBAAKP,UAAU,OACb,4BAAKO,EAAOC,OAAOC,UACnB,2BAAIF,EAAOC,OAAOE,KAClB,yCACY,2BAAIH,EAAOC,OAAOG,qBAOxC,6BAASX,UAAU,aACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACZI,KAAK1B,MAAMU,cAAckB,KAAI,SAACM,GAAD,OAC5B,yBAAKZ,UAAU,OACb,4BAAKY,EAAQJ,OAAOK,aACpB,4BAAKD,EAAQJ,OAAOM,YAEpB,yBAAKb,IAAKW,EAAQJ,OAAOO,YAAYP,OAAOQ,KAAKC,kB,GArHjDC,IAAMC,eCAJC,QACW,cAA7BtC,OAAOuC,SAASC,UAEe,UAA7BxC,OAAOuC,SAASC,UAEhBxC,OAAOuC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpC,MAAK,SAAAqC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrC,QAAQqC,MAAMA,EAAMC,a,mBEzI5BlE,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.dc00a45c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/phone.585cb6cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bridge.b94a6599.jpg\";","module.exports = __webpack_public_path__ + \"static/media/truck.2075af6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/produce.92e47cd6.jpg\";","import React from \"react\";\nimport logo from \"./media/logo.svg\";\nimport home1 from \"./media/phone.jpg\";\nimport home2 from \"./media/bridge.jpg\";\nimport home3 from \"./media/truck.jpg\";\nimport home4 from \"./media/produce.jpg\";\nimport \"./App.scss\";\nimport ParticlesBg from \"particles-bg\";\nimport AnimateHeight from \"react-animate-height\";\n\nconst contentful = require(\"contentful\");\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      sizeLimit: 768,\n      burgerHeight: 0,\n      teamData: [],\n      portfolioData: [],\n    };\n  }\n\n  componentDidMount() {\n    var client = contentful.createClient({\n      // This is the space ID. A space is like a project folder in Contentful terms\n      space: \"kpndngk418ru\",\n      // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n      accessToken: \"6gfR7ml1YUc663Qzrg5JZ3CaWZnj7gEqN46t9VoNcQU\",\n    });\n\n    client.getEntries({ content_type: \"teamMember\" }).then((response) => {\n      this.setState({ teamData: response.items });\n    });\n\n    client.getEntries({ content_type: \"portfolioCompany\" }).then((response) => {\n      this.setState({ portfolioData: response.items });\n      console.log(this.state.portfolioData);\n    });\n  }\n\n  componentWillUnmount() {}\n\n  updateWindowDimensions() {\n    console.log(window.innerWidth);\n  }\n\n  burgerExpand = () => {\n    const currentHeight = this.state.burgerHeight;\n\n    this.setState({ burgerHeight: currentHeight === 0 ? \"auto\" : 0 });\n  };\n\n  render() {\n    return (\n      <div className=\"full-body\">\n        <div className=\"navbar\">\n          <div className=\"container\">\n            <div className=\"w-100 mobile-burger d-hide\">\n              <div className=\"row w-100\">\n                <div className=\"col\">\n                  <img className=\"navbar-logo\" src={logo} />\n                </div>\n                <div className=\"col\">\n                  <button className=\"expandBurger\" onClick={this.burgerExpand}>\n                    X\n                  </button>\n                </div>\n              </div>\n\n              <AnimateHeight\n                duration={500}\n                height={this.state.burgerHeight}\n                className=\"expansion d-flex w-100\"\n              >\n                <a className=\"w-100\">About</a>\n                <a className=\"w-100 my-4\">Team</a>\n                <a className=\"w-100\">Portfolio</a>\n              </AnimateHeight>\n            </div>\n            <div className=\"row m-hide\">\n              <div className=\"col-auto\">\n                <img className=\"navbar-logo\" src={logo} />\n              </div>\n              <div className=\"col d-flex align-items-center justify-content-end\">\n                <div className=\"navlink-container playfair\">\n                  <a>About</a>\n                  <a className=\"mx-5\">Team</a>\n                  <a>Portfolio</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <section className=\"home d-flex\">\n          <div className=\"head-text text-center\">\n            <h1 className=\"tbird-font\">T-BIRD</h1>\n            <h2 className=\"tbird-font\">CAPITAL</h2>\n\n            <h2 className=\"playfair mt-5\">\n              <red className=\"red\">early-stage</red> angels\n            </h2>\n          </div>\n        </section>\n        <section className=\"team\">\n          <div className=\"container\">\n            <div className=\"row\">\n              {this.state.teamData.map((person) => (\n                <div className=\"col\">\n                  <h1>{person.fields.fullName}</h1>\n                  <p>{person.fields.bio}</p>\n                  <h2>\n                    LinkedIn: <a>{person.fields.linkedinUrl}</a>\n                  </h2>\n                </div>\n              ))}\n            </div>\n          </div>\n        </section>\n        <section className=\"portfolio\">\n          <div className=\"container\">\n            <div className=\"row\">\n              {this.state.portfolioData.map((company) => (\n                <div className=\"col\">\n                  <h1>{company.fields.companyName}</h1>\n                  <h2>{company.fields.websiteUrl}</h2>\n\n                  <img src={company.fields.companyLogo.fields.file.url} />\n                </div>\n              ))}\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.d6aa591e.svg\";"],"sourceRoot":""}